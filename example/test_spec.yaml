test:
  suites:
  - name: "Declarative test"
    setup:
    - uuid: product_id
    - print:
        - "UUID is {}"
        - product_id
    - code: | # Note that we can intersperse code if we wish. It's just another YAML directive.
        print("Product ID for this test suite is {}", product_id)
    teardown:
    - call_may_fail:
        target: "testdata/samples/vision/product-search/delete_product.py  "
        params:
          "arg1":
            variable: product_id
    - code: |
    cases:
    - id: Product Life
      spec:
      - call:
          target: "testdata/samples/vision/product-search/list_products.py"
      - require_not_contains:
          - variable: product_id
      - call:
          target: "testdata/samples/vision/product-search/create_product.py"
          params:  # TODO(vchudnov): Allow args: to just be a list
            "arg1":
              variable: product_id
            "arg2":
              literal: Fancier towel
            "arg3":
              literal: homegoods
      - call:
          target: "testdata/samples/vision/product-search/list_products.py"
      - expect_contains:
          - variable: product_id
          - literal: "towel"
      - call:
          target: "testdata/samples/vision/product-search/delete_product.py"
          params:
            "arg1":
              variable: product_id
      - call:
          target: "testdata/samples/vision/product-search/list_products.py"
      - expect_not_contains:
          - variable: product_id


  - name:  "Procedural test"
    setup:
    - code: |
        product_id=uuid()
        print("Product ID for this test suite is {}", product_id)
    teardown:
    - code: |
        call_may_fail("testdata/samples/vision/product-search/delete_product.py", arg1=product_id)

    cases:
    - id: Product Life
      spec:
      - code: |
          out = call("testdata/samples/vision/product-search/list_products.py")
          require(product_id not in out, "the product {} should initially be absent", product_id)
  
          call("testdata/samples/vision/product-search/create_product.py", arg1=product_id, arg2="Fancier towel",arg3="homegoods")
  
          out = call("testdata/samples/vision/product-search/list_products.py")
          expect(product_id in out, "the product {} should be present after creation", product_id)
  
          call("testdata/samples/vision/product-search/delete_product.py", arg1=product_id)
  
          out = call("testdata/samples/vision/product-search/list_products.py")
          require(product_id not in out, "the product {} should be absent after deletion", product_id)
